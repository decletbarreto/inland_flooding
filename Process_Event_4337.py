# generate county percentages for Event 4676
# this script generates county-specific percentages of flood extent that occurred outside of FEMA flood zones for Event 4337

execfile ("calculate_percent_of_flood_extent_within_flood_zones.py")
import csv
import os

#counties_list = ["01001","01003","01005","01007","01009","01011","01015","01017","01019","01021","01023","01025","01029","01031","01033","01037","01039","01043","01045","01047","01049","01051","01053","01055","01057","01059","01061","01063","01065","01067","01071","01073","01075","01077","01079","01081","01083","01085","01087","01089","01091","01093","01095","01097","01099","01101","01103","01105","01107","01109","01111","01113","01115","01117","01119","01121","01123","01125","01127","01129","01131","01133","05001","05003","05011","05013","05017","05019","05025","05027","05029","05035","05037","05039","05041","05043","05045","05047","05051","05053","05057","05059","05061","05069","05073","05077","05079","05081","05083","05085","05091","05095","05097","05099","05103","05105","05107","05109","05113","05115","05117","05119","05123","05125","05127","05131","05133","05139","05145","05147","05149","12005","12013","12033","12045","12059","12063","12077","12091","12113","12131","12133","13015","13045","13047","13061","13083","13115","13143","13145","13149","13215","13239","13259","13285","13295","13313","22001","22003","22005","22007","22009","22011","22013","22015","22017","22019","22021","22023","22025","22027","22029","22031","22033","22035","22037","22039","22041","22043","22045","22047","22049","22053","22055","22059","22061","22063","22065","22067","22069","22071","22073","22077","22079","22081","22083","22085","22087","22089","22091","22093","22095","22097","22099","22103","22105","22107","22111","22113","22115","22117","22119","22121","22123","22125","22127","28001","28003","28005","28007","28009","28011","28013","28015","28017","28019","28021","28023","28025","28027","28029","28031","28033","28035","28037","28039","28041","28043","28045","28047","28049","28051","28053","28055","28057","28059","28061","28063","28065","28067","28069","28071","28073","28075","28077","28079","28081","28083","28085","28087","28089","28091","28093","28095","28097","28099","28101","28103","28105","28107","28109","28111","28113","28115","28117","28119","28121","28123","28125","28127","28129","28131","28133","28135","28137","28139","28141","28143","28145","28147","28149","28151","28153","28155","28157","28159","28161","28163","40023","40061","40077","40079","40089","40091","40101","40121","40127","47047","47051","47055","47065","47069","47071","47099","47103","47109","47115","47127","47157","47181","48001","48005","48037","48063","48067","48073","48119","48159","48183","48199","48201","48203","48213","48223","48225","48241","48245","48277","48289","48291","48313","48315","48339","48343","48347","48351","48361","48365","48373","48379","48387","48401","48403","48405","48407","48419","48423","48449","48455","48457","48459","48467","48471","48499"]
#counties_list = ["1001","1003","1005","1007","1009","1011","1015","1017","1019","1021","1023","1025","1029","1031","1033","1037","1039","1043","1045","1047","1049","1051","1053","1055","1057","1059","1061","1063","1065","1067","1071","1073","1075","1077","1079","1081","1083","1085","1087","1089","1091","1093","1095","1097","1099","1101","1103","1105","1107","1109","1111","1113","1115","1117","1119","1121","1123","1125","1127","1129","1131","1133","5001","5003","5011","5013","5017","5019","5025","5027","5029","5035","5037","5039","5041","5043","5045","5047","5051","5053","5057","5059","5061","5069","5073","5077","5079","5081","5083","5085","5091","5095","5097","5099","5103","5105","5107","5109","5113","5115","5117","5119","5123","5125","5127","5131","5133","5139","5145","5147","5149","12005","12013","12033","12045","12059","12063","12077","12091","12113","12131","12133","13015","13045","13047","13061","13083","13115","13143","13145","13149","13215","13239","13259","13285","13295","13313","22001","22003","22005","22007","22009","22011","22013","22015","22017","22019","22021","22023","22025","22027","22029","22031","22033","22035","22037","22039","22041","22043","22045","22047","22049","22053","22055","22059","22061","22063","22065","22067","22069","22071","22073","22077","22079","22081","22083","22085","22087","22089","22091","22093","22095","22097","22099","22103","22105","22107","22111","22113","22115","22117","22119","22121","22123","22125","22127","28001","28003","28005","28007","28009","28011","28013","28015","28017","28019","28021","28023","28025","28027","28029","28031","28033","28035","28037","28039","28041","28043","28045","28047","28049","28051","28053","28055","28057","28059","28061","28063","28065","28067","28069","28071","28073","28075","28077","28079","28081","28083","28085","28087","28089","28091","28093","28095","28097","28099","28101","28103","28105","28107","28109","28111","28113","28115","28117","28119","28121","28123","28125","28127","28129","28131","28133","28135","28137","28139","28141","28143","28145","28147","28149","28151","28153","28155","28157","28159","28161","28163","40023","40061","40077","40079","40089","40091","40101","40121","40127","47047","47051","47055","47065","47069","47071","47099","47103","47109","47115","47127","47157","47181","48001","48005","48037","48063","48067","48073","48119","48159","48183","48199","48201","48203","48213","48223","48225","48241","48245","48277","48289","48291","48313","48315","48339","48343","48347","48351","48361","48365","48373","48379","48387","48401","48403","48405","48407","48419","48423","48449","48455","48457","48459","48467","48471","48499"]
counties_list = ["01041","22051","22057","22075","22101","22109""48071","48167"]

#counties_list = ["01125"]
#counties_list = ["05027"]
event_id = 4337
percent_flooded_outside_list  = []
percent_flooded_in_geography_list = []

for fips in counties_list:
	#print (str(fips))
	percent_flooded_outside      = estimate_percent_of_flood_within_flood_zone(event_id,"county",str(fips))[0]
	percent_flooded_in_geography = estimate_percent_of_flood_within_flood_zone(event_id,"county",str(fips))[1]	
	percent_flooded_outside_list.append(percent_flooded_outside)
	percent_flooded_in_geography_list.append(percent_flooded_in_geography)
	
print(percent_flooded_outside_list)
print(percent_flooded_in_geography_list)
f = "C:\\Users\\jdeclet-barreto\\Documents\\EPIF\\data\\overlay_analysis\\geography-specific_analysis\\county\\csv\\Event_" + str(event_id) + "_selected_counties_report.csv"
if os.path.exists(f):
    os.remove(f)
with open(f, 'wb') as outcsv:
    writer = csv.writer(outcsv)
    writer.writerow(["FIPS", "PER_FLOOD_OUTSIDE_FEMA_FLOOD_ZONES","PER_FLOODED_IN_GEOGRAPHY"])
    
    for fips, percent_flooded_outside, percent_flooded_in_geography in zip(counties_list,percent_flooded_outside_list,percent_flooded_in_geography_list):
    	per1 = 100 * round(percent_flooded_outside,4)
    	per2 = 100 * round(percent_flooded_in_geography,4)
    	writer.writerow([fips, per1,per2])
    outcsv.close()