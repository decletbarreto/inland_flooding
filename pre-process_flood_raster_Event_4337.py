# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# pre-process_flood_raster.py
# Created on: 2019-01-26 14:04:28.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: pre-process_flood_raster <Flood_Event_ID> <Unprojected_Flood_Extent_Raster> 
# Description: 
# ---------------------------------------------------------------------------

import sys

def preprocess_flood_raster(flood_event_id,red_band_pixel_value_threshold):
    import arcpy
    import datetime
    import glob
    import os

    #cast to string
    Flood_Event_ID = str(flood_event_id)
    flood_rasters_dir= "C:\\Users\\jdeclet-barreto\\Documents\\EPIF\\data\\CFO\\flood_extent_rasters"

    #find flood raster based on flood_event_id
    Unprojected_Flood_Extent_Raster = glob.glob(flood_rasters_dir + "\\*" + Flood_Event_ID + "*.tif")[0]

    arcpy.CheckOutExtension("Spatial")
    arcpy.env.overwriteOutput = True 
    
    #Unprojected_Flood_Extent_Raster = unprojected_flood_extent_raster
    
    # Local variables:
    FEMA_Flood_zones = "d:\\UCS_projects\\EPIF\\data\\FEMA_flood_hazard_areas.gdb\\FEMA_NFHL_100_500_year_flood_zones_NAD83"
    FEMA_100_and_500_year_flood_zones = "FEMA 100 and 500 year flood zones"
    overlay_analysis_gdb = "d:\\UCS_projects\\EPIF\\data\\overlay_analysis\\Event_" + Flood_Event_ID + ".gdb"
    Raster_with_valid_values = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_temp"
    Raster_with_valid_values_projected = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_NAD83"
    Raster_reclass = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_reclass"
    Raster_red_band = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_red_band"
    Raster_green_band = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_green_band"
    Raster_blue_band = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_blue_band"
    Raster_red_band_lyr="Raster_red_band_lyr"
    Raster_blue_band_lyr="Raster_blue_band_lyr"
    Raster_green_band_lyr="Raster_green_band_lyr"
    Raster_floodwater_in_red_band = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_red_band_floodwaters"
    Raster_floodwater_in_red_band_reclass = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_red_band_floodwaters_reclass"
    unprojected_raster_red_band_lyr="unprojected_raster_red_band_lyr"
    reclass_map = "0 " + str(red_band_pixel_value_threshold - 1) +" 0;" + str(red_band_pixel_value_threshold) + " 255 1;NODATA 0"       


    Raster_floodwater_in_red_band_unprojected = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_red_band_floodwaters_unprojected"
    Raster_floodwater_in_red_band_unprojected_reclass = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_red_band_floodwaters_unprojected_reclass"
    
    Raster_floodwater_temp = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_floodwaters_temp"
    Raster_floodwater_final = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_floodwaters_final"
    Flood_event_poly = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_poly"
    Flood_event_bbox = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_bbox"
    Flood_event_FEMA_flood_zones = overlay_analysis_gdb + "\\Event_" + Flood_Event_ID + "_FEMA_flood_zones"
    flood_zones_qry="FLD_ZONE LIKE 'V%' OR FLD_ZONE LIKE 'A%' OR ZONE_SUBTY = '0.2 PCT ANNUAL CHANCE FLOOD HAZARD'"
    #resampling_type = "MAJORITY"
    resampling_type = "NEAREST"

    print ("PROCESS STARTING: Pre-process flood raster on " + str(datetime.datetime.now()))
    print ("Flood Event ID: " + Flood_Event_ID)
    print ("Flood Raster: " + Unprojected_Flood_Extent_Raster)
    print ("Red Band Threshold: " +  str(red_band_pixel_value_threshold))
    print ("Projection Resampling Algorithm: " +  resampling_type)
    print ("Reclass map: " + str(reclass_map))
    
    # Process: Delete gdb if exists
    print ("deleting %s." % overlay_analysis_gdb) 
    delete = arcpy.Delete_management("C:\\Users\\jdeclet-barreto\\Documents\\EPIF\\data\\overlay_analysis\\Event_" + Flood_Event_ID + ".gdb" , "")
    print (delete)
    #Process: Create FGDB
    print ("creating %s." % overlay_analysis_gdb )
    arcpy.CreateFileGDB_management("C:\\Users\\jdeclet-barreto\\Documents\\EPIF\\data\\overlay_analysis", "Event_" + Flood_Event_ID + ".gdb", "CURRENT")

    # Process: Make Feature Layer
    print ("1. Create bounding box")
    print ("\tmaking feature layer")
    arcpy.MakeFeatureLayer_management(FEMA_Flood_zones, FEMA_100_and_500_year_flood_zones, flood_zones_qry, "", "OBJECTID OBJECTID VISIBLE NONE;Shape Shape VISIBLE NONE;DFIRM_ID DFIRM_ID VISIBLE NONE;VERSION_ID VERSION_ID VISIBLE NONE;FLD_AR_ID FLD_AR_ID VISIBLE NONE;STUDY_TYP STUDY_TYP VISIBLE NONE;FLD_ZONE FLD_ZONE VISIBLE NONE;ZONE_SUBTY ZONE_SUBTY VISIBLE NONE;SFHA_TF SFHA_TF VISIBLE NONE;STATIC_BFE STATIC_BFE VISIBLE NONE;V_DATUM V_DATUM VISIBLE NONE;DEPTH DEPTH VISIBLE NONE;LEN_UNIT LEN_UNIT VISIBLE NONE;VELOCITY VELOCITY VISIBLE NONE;VEL_UNIT VEL_UNIT VISIBLE NONE;AR_REVERT AR_REVERT VISIBLE NONE;AR_SUBTRV AR_SUBTRV VISIBLE NONE;BFE_REVERT BFE_REVERT VISIBLE NONE;DEP_REVERT DEP_REVERT VISIBLE NONE;DUAL_ZONE DUAL_ZONE VISIBLE NONE;SOURCE_CIT SOURCE_CIT VISIBLE NONE;GFID GFID VISIBLE NONE;Shape_Length Shape_Length VISIBLE NONE;Shape_Area Shape_Area VISIBLE NONE")

    # Process: Extract Raster by Attributes
    print ("\textracting raster by attributes")
    arcpy.gp.ExtractByAttributes_sa(Unprojected_Flood_Extent_Raster, "\"Value\">0", Raster_with_valid_values)
    
    # Process: Extract Unprojected Raster by Attributes
    #print ("\textracting floodwater from unprojected raster")
    #qry = "\"Value\">=" + str(red_band_pixel_value_threshold)
    #arcpy.gp.ExtractByAttributes_sa(Raster_with_valid_values, qry, Raster_floodwater_in_red_band_unprojected)

    # Process: Project Raster
    print ("\tprojecting raster")
    arcpy.ProjectRaster_management(Raster_with_valid_values, Raster_with_valid_values_projected, "PROJCS['NAD_1983_Contiguous_USA_Albers',GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Albers'],PARAMETER['False_Easting',0.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',-96.0],PARAMETER['Standard_Parallel_1',29.5],PARAMETER['Standard_Parallel_2',45.5],PARAMETER['Latitude_Of_Origin',23.0],UNIT['Meter',1.0]]", resampling_type, "171.452157665489 171.452157665489", "WGS_1984_(ITRF00)_To_NAD_1983", "", "")

    # Process: Reclassify
    print ("\treclassing")
    arcpy.gp.Reclassify_sa(Raster_with_valid_values_projected, "Value", "0 255 1;NODATA 1", Raster_reclass, "DATA")

    # Process: Raster to Polygon
    print ("\tconverting raster to polygon")
    arcpy.RasterToPolygon_conversion(Raster_reclass, Flood_event_poly, "NO_SIMPLIFY", "")

    # Process: Dissolve
    print ("\tdissolving")
    arcpy.Dissolve_management(Flood_event_poly, Flood_event_bbox, "", "", "SINGLE_PART", "DISSOLVE_LINES")

    # Process: Clip
    print ("\tclipping")
    arcpy.Clip_analysis(FEMA_100_and_500_year_flood_zones, Flood_event_bbox, Flood_event_FEMA_flood_zones, "")

    #Now extract bands and get water pixels
    print ("2. Extracting floodwater")
    print ("\textracting red band")
    arcpy.MakeRasterLayer_management(in_raster=Raster_with_valid_values_projected, out_rasterlayer=Raster_red_band_lyr,   band_index="1")

    #print ("\textracting green band")
    #arcpy.MakeRasterLayer_management(in_raster=Unprojected_Flood_Extent_Raster, out_rasterlayer=Raster_green_band_lyr, band_index="2")
    #arcpy.MakeRasterLayer_management(in_raster=Raster_with_valid_values_projected, out_rasterlayer=Raster_green_band_lyr, band_index="2")

    #print ("\textracting blue band")
    #arcpy.MakeRasterLayer_management(in_raster=Unprojected_Flood_Extent_Raster, out_rasterlayer=Raster_blue_band_lyr,  band_index="3")
    #arcpy.MakeRasterLayer_management(in_raster=Raster_with_valid_values_projected, out_rasterlayer=Raster_blue_band_lyr,  band_index="3")

    #extract flood water from redband (i.e., value=255)
    print ("\textracting floodwaters from redband")
    red_band_qry = '"Value" >=' + str(red_band_pixel_value_threshold)    
    arcpy.gp.ExtractByAttributes_sa(Raster_red_band_lyr, red_band_qry, Raster_floodwater_in_red_band)

    #print ("\tfinal band combination" )
    # Now combine with Boolean AND all three bands to get only floodwaters
    #Process: Boolean And
    #arcpy.gp.BooleanAnd_sa(Raster_floodwater_in_red_band, Raster_green_band, Raster_floodwater_temp)
    # Process: Boolean And
    #arcpy.gp.BooleanAnd_sa(Raster_floodwater_temp, Raster_blue_band, Raster_floodwater_final)
    
    #accuracy assessment        
    #Process: Extract Unprojected Raster by Attributes
    print ("\treclassing unprojected floodwaters")
    arcpy.MakeRasterLayer_management(in_raster=Unprojected_Flood_Extent_Raster, out_rasterlayer=unprojected_raster_red_band_lyr,   band_index="1")
    arcpy.gp.Reclassify_sa(unprojected_raster_red_band_lyr, "Value", reclass_map , Raster_floodwater_in_red_band_unprojected_reclass, "DATA")
    
    #Process: Extract Projected Raster by Attributes
    print ("\treclassing projected floodwaters")
    #arcpy.MakeRasterLayer_management(in_raster=Unprojected_Flood_Extent_Raster, out_rasterlayer=unprojected_raster_red_band_lyr,   band_index="1")
    arcpy.gp.Reclassify_sa(Raster_floodwater_in_red_band, "Value", reclass_map , Raster_floodwater_final, "DATA")
        
    print ("Process ending for Flood Event ID " + Flood_Event_ID + " on " + str(datetime.datetime.now()))


#flood_rasters_dir= "C:\\Users\\jdeclet-barreto\\Documents\\EPIF\\data\\CFO\\flood_extent_rasters"
flood_event_id=4337
red_band_pixel_value_threshold = 255
preprocess_flood_raster(flood_event_id,red_band_pixel_value_threshold)
